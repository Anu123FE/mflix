[{"/Users/anu/Documents/Project/mflix/src/index.js":"1","/Users/anu/Documents/Project/mflix/src/App.js":"2","/Users/anu/Documents/Project/mflix/src/reportWebVitals.js":"3","/Users/anu/Documents/Project/mflix/src/components/main-view/main-view.js":"4","/Users/anu/Documents/Project/mflix/src/components/register-view/register.js":"5","/Users/anu/Documents/Project/mflix/src/components/login-view/login.js":"6","/Users/anu/Documents/Project/mflix/src/components/movie-card/movie-card.js":"7","/Users/anu/Documents/Project/mflix/src/components/movie-view/movie-view.js":"8","/Users/anu/Documents/Project/mflix/src/components/header/headerNav.js":"9","/Users/anu/Documents/Project/mflix/src/components/profile-view/profile-view.js":"10","/Users/anu/Documents/Project/mflix/src/components/edit-profile-view/edit-profile-view.js":"11","/Users/anu/Documents/Project/mflix/src/components/movie-card1/movie-card1.js":"12","/Users/anu/Documents/Project/mflix/src/components/genre-view/genre-view.js":"13","/Users/anu/Documents/Project/mflix/src/components/director-view/director-view.js":"14","/Users/anu/Documents/Project/mflix/src/reducers/reducers.js":"15","/Users/anu/Documents/Project/mflix/src/actions/actions.js":"16"},{"size":706,"mtime":1634691953562,"results":"17","hashOfConfig":"18"},{"size":1260,"mtime":1634422687204,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1631407199380,"results":"20","hashOfConfig":"18"},{"size":2921,"mtime":1634693405649,"results":"21","hashOfConfig":"18"},{"size":2528,"mtime":1632188373895,"results":"22","hashOfConfig":"18"},{"size":2185,"mtime":1632446470294,"results":"23","hashOfConfig":"18"},{"size":1286,"mtime":1633999518445,"results":"24","hashOfConfig":"18"},{"size":2300,"mtime":1633999449543,"results":"25","hashOfConfig":"18"},{"size":566,"mtime":1632186978990,"results":"26","hashOfConfig":"18"},{"size":2447,"mtime":1633999405152,"results":"27","hashOfConfig":"18"},{"size":3394,"mtime":1633999810258,"results":"28","hashOfConfig":"18"},{"size":1194,"mtime":1633999469449,"results":"29","hashOfConfig":"18"},{"size":1928,"mtime":1634000064713,"results":"30","hashOfConfig":"18"},{"size":2146,"mtime":1634000086999,"results":"31","hashOfConfig":"18"},{"size":771,"mtime":1634421905374,"results":"32","hashOfConfig":"18"},{"size":235,"mtime":1634421905374,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c3zlag",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anu/Documents/Project/mflix/src/index.js",[],"/Users/anu/Documents/Project/mflix/src/App.js",[],"/Users/anu/Documents/Project/mflix/src/reportWebVitals.js",[],"/Users/anu/Documents/Project/mflix/src/components/main-view/main-view.js",["68"],"import React from \"react\";\nimport { MovieCard } from \"../movie-card/movie-card\";\nimport { MovieView } from \"../movie-view/movie-view\";\nimport {  Container } from \"react-bootstrap\";\nimport \"./main-view.css\";\nimport { Link } from 'react-router-dom';\nimport Nav from \"react-bootstrap/Nav\";\nimport axios from \"axios\";\n\nimport { connect } from 'react-redux';\nimport { setMovies } from '../../actions/actions';\n\nclass MainView extends React.Component {\n  state = {\n    movies: []\n  }\n\n  componentWillMount(){\n    fetch(\"https://movie-api-v001.herokuapp.com/movies\")\n    .then(response=>response.json())\n    .then(response=>{\n      this.props.setMovies([...response]);\n    })\n    .catch(err=>console.log(err))\n  }\n\n  // getMovies(token) {\n  //   axios.get(\"https://movie-api-v001.herokuapp.com/movies\", {\n  //     headers: { Authorization: `Bearer ${token}`}\n  //   })\n  //   .then(response => {\n  //     // Assign the result to the state\n  //     // this.setState({\n  //     //   movies: response.data\n  //     // });\n  //    \n  //   })\n  //   .catch(function (error) {\n  //     console.log(error);\n  //   });\n  // }\n\n  setRegistered(register){\n    this.setState({\n      register\n    })\n  }\n\n  setLoggedIn(loggedIn){\n    this.setState({\n      loggedIn\n    })\n  }\n\n  setMovieSelected(newSelectedMovie) {\n    this.setState({\n      selectedMovie: newSelectedMovie\n    });\n  }\n\n  onLoggedOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n   \n  }\n\n\n\n  render() {\n    console.log(this.props)\n    const { movies} = this.props;\n    const {selectedMovie} =  this.state;\n\n    return (\n      <Container>\n\n        <Nav variant=\"pills\" className=\"justify-content-end\" defaultActiveKey=\"/home\">\n        <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/movies\">Movies</Link></Nav.Link>\n          </Nav.Item>\n        <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/view-profile\">View Profile</Link></Nav.Link>\n           </Nav.Item>\n           <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/edit-profile\">Edit Profile</Link></Nav.Link>\n           </Nav.Item>\n           <Nav.Item>\n                 <Nav.Link eventKey=\"#logout\"> <Link onClick={this.onLoggedOut} to=\"/\">Log out</Link></Nav.Link>\n            </Nav.Item>\n         </Nav>\n\n      <div className=\"main-view\">\n        <div className=\"cardGroup\">\n        {selectedMovie\n          ? <MovieView movie={selectedMovie} OnClickBack={newSelectedMovie => { this.setMovieSelected(newSelectedMovie); }}/>\n          : movies.map((movie, index) => (\n            <MovieCard key={index} movie={movie} onMovieClick={(movie) => { this.setMovieSelected(movie) }}/>\n           \n          ))\n        }\n        </div>\n      </div>\n      </Container>\n    );\n\n  }\n}\n\nlet mapStateToProps = state => {\n  console.log(state)\n  return { movies: state.movies }\n}\n\nexport default connect(mapStateToProps, { setMovies } )(MainView);\n","/Users/anu/Documents/Project/mflix/src/components/register-view/register.js",[],"/Users/anu/Documents/Project/mflix/src/components/login-view/login.js",[],"/Users/anu/Documents/Project/mflix/src/components/movie-card/movie-card.js",[],"/Users/anu/Documents/Project/mflix/src/components/movie-view/movie-view.js",[],"/Users/anu/Documents/Project/mflix/src/components/header/headerNav.js",[],"/Users/anu/Documents/Project/mflix/src/components/profile-view/profile-view.js",[],"/Users/anu/Documents/Project/mflix/src/components/edit-profile-view/edit-profile-view.js",["69"],"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport Nav from \"react-bootstrap/Nav\";\nimport axios from \"axios\";\n\nclass EditProfileView extends React.Component {\n   state = {\n    user: \"\",\n    Username: \"\",\n    Email: \"\",\n    Birthday: \"\",\n    Password: \"\"\n  }\n\n  setInput(evt){\n    const {name, value} = evt.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  componentDidMount(){\n    axios.get(`https://movie-api-v001.herokuapp.com/user/${localStorage.getItem(\"user\")}`, {\n        headers: { 'Access-Control-Allow-Origin': \"*\", Authorization: `Bearer ${localStorage.getItem(\"token\")}`}\n    })\n    .then(response=>{\n      this.setState({\n        Username: response.data.Username,\n        Email: response.data.Email,\n        Password: response.data.Password,\n        Birthday: response.data.Birthday,\n        Password: response.data.Password\n      });\n    })\n    .catch(err=>console.log(err))\n  }\n\n   handleSubmit = (e) => {\n    e.preventDefault();\n \n    axios.put(\"https://movie-api-v001.herokuapp.com/users/\"+localStorage.getItem(\"user\"), {\n      Username: this.state.Username,\n      Password: this.state.Password,\n      Email: this.state.Email,\n      Birthday: this.state.Birthday,\n    }, {\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}`}\n    })\n    .then(response => {\n      const data = response.data;\n      console.log(data)\n      })\n    .catch(e => {\n      console.log('Error during update!')\n    });\n  };\n\n  deregister = () => {\n    axios.delete(\"https://movie-api-v001.herokuapp.com/users/\"+localStorage.getItem(\"user\"))\n    .then(response => {\n     if(response.status === 2000) alert(\"Deleted!\")\n      })\n    .catch(e => {\n      console.log('Error during update!')\n    });\n  }\n\n  render() {\n    \n\n    return (\n<div>\n\n<Container>\n        <Nav variant=\"pills\" className=\"justify-content-end\" defaultActiveKey=\"/home\">\n     \n        <Nav variant=\"pills\" className=\"justify-content-end\" defaultActiveKey=\"/home\">\n        <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/movies\">Movies</Link></Nav.Link>\n          </Nav.Item>\n        <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/view-profile\">View Profile</Link></Nav.Link>\n           </Nav.Item>\n           <Nav.Item>\n                <Nav.Link href=\"#profile\"><Link to=\"/\">Edit Profile</Link></Nav.Link>\n           </Nav.Item>\n           <Nav.Item>\n                 <Nav.Link eventKey=\"#logout\"> <Link onClick={this.onLoggedOut} to=\"/\">Log out</Link></Nav.Link>\n            </Nav.Item>\n         </Nav>\n         </Nav>\n         <form>\n\nUsername: <input name=\"Username\" type=\"text\" value={this.state.Username} onChange={e => this.setInput(e)}></input>\n<br></br>\nEmail: <input name=\"Email\" type=\"text\" value={this.state.Email} onChange={e => this.setInput(e)}></input>\n<br></br>\nPassword: <input name=\"Password\" type=\"password\" value={this.state.Password} onChange={e => this.setInput(e)}></input>\n<br></br>\nBirthday: <input name=\"Birthday\" type=\"text\" value={this.state.Birthday} onChange={e => this.setInput(e)}></input>\n<br></br>\n<input type=\"button\" value=\"Edit\" onClick={this.handleSubmit}></input>\n          \n </form> \n        \n        <br></br>\n        <input type=\"button\" value=\"De-register\" onClick={this.deregister}></input>\n </Container>\n</div>\n    );\n\n  }\n}\n\nexport default EditProfileView;\n","/Users/anu/Documents/Project/mflix/src/components/movie-card1/movie-card1.js",[],"/Users/anu/Documents/Project/mflix/src/components/genre-view/genre-view.js",[],"/Users/anu/Documents/Project/mflix/src/components/director-view/director-view.js",[],"/Users/anu/Documents/Project/mflix/src/reducers/reducers.js",[],"/Users/anu/Documents/Project/mflix/src/actions/actions.js",[],{"ruleId":"70","severity":1,"message":"71","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":33,"column":9,"nodeType":"76","messageId":"77","endLine":33,"endColumn":17},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'Password'.","ObjectExpression","unexpected"]